parameters:
  git_dir: .
  bin_dir: vendor/bin
  ascii:
    failed: ~
    succeeded: ~
  tasks:
    composer:
      strict: true
      metadata:
        priority: 1400
    jsonlint:
      detect_key_conflicts: true
      metadata:
        priority: 1200
    xmllint:
      load_from_net: true
      x_include: true
      dtd_validation: true
      scheme_validation: true
      triggered_by: [xml]
      ignore_patterns:
        # Uses an incomplete definition, which conflicts when <exclude-pattern>
        # is defined.
        - /^phpcs.xml$/
      metadata:
        priority: 1200
    yamllint:
      parse_constant: true
      metadata:
        priority: 1200
    phpcs:
      standard: ./phpcs.xml
      triggered_by: [php]
      metadata:
        priority: 1000
    phpmd:
      exclude: []
      ruleset:
        - ./phpmd.xml
      triggered_by: [php]
      metadata:
        priority: 800
    phpstan:
      autoload_file: ~
      configuration: ./phpstan.neon
      level: 4
      triggered_by: [php]
      metadata:
        priority: 600
    phpunit:
      config_file: ./phpunit.xml
      metadata:
        priority: 400
    securitychecker:
      lockfile: ./composer.lock
      format: ~
      end_point: ~
      timeout: ~
      run_always: true
      metadata:
        priority: 200
#    dependency-guard:
#      metadata:
#        priority: 100

#services:
#  mediact.dependency_guard.exporter.factory:
#    class: Mediact\DependencyGuard\Composer\Command\Exporter\ViolationExporterFactory
#
#  mediact.dependency_guard.exporter:
#    class: Mediact\DependencyGuard\Exporter\ViolationExporterInterface
#    factory: 'mediact.dependency_guard.exporter.factory:create'
#    arguments:
#    - '@console.input'
#    - '@console.output'
#
#  mediact.dependency_guard.factory:
#    class: Mediact\DependencyGuard\DependencyGuardFactory
#
#  mediact.dependency_guard.composer.io:
#    class: Composer\IO\BufferIO
#
#  mediact.dependency_guard.composer.factory:
#    class: Composer\Factory
#
#  mediact.dependency_guard.composer:
#    class: Composer\Composer
#    factory: mediact.dependency_guard.composer.factory:createComposer
#    arguments:
#      - '@mediact.dependency_guard.composer.io'
#
#  mediact.dependency_guard.grumphp.task:
#    class: Mediact\DependencyGuard\GrumPHP\DependencyGuard
#    arguments:
#      - '@mediact.dependency_guard.composer'
#      - '@mediact.dependency_guard.factory'
#      - '@mediact.dependency_guard.exporter'
#    tags:
#      - name: grumphp.task
#        config: dependency-guard
